---
- name: Check for Ubuntu distro
  ansible.builtin.fail:
    msg: "Only good for Ubuntu. Please try again."
  when: ansible_facts['distribution'] != "Ubuntu"

- name: Install packages
  ansible.builtin.apt:
    name:
      - neovim
      - git
      - tree
      - xsel
      - xclip
    state: present
    update_cache: true

###
# Check for version of Go lang, if not preferred version,
###

- name: Check for Golang version
  ansible.builtin.shell: "/usr/local/go/bin/go version"
  register: golang_version
  ignore_errors: true
  changed_when: false

- name: Install Golang
  ansible.builtin.import_tasks:
    file: golang.yml
  when: 'golang_version.stdout != goversion_preferred'

###
# Check for version of Terraform, if not preferred version,
###

- name: Check for Terraform version
  ansible.builtin.command: terraform -version
  register: tf_version
  changed_when: false
  ignore_errors: true

- name: Install Terraform
  ansible.builtin.import_tasks:
    file: terraform.yml
  when: 'tf_version.stdout != tfversion_preferred'

- name: Copy zshrc file to user folder'
  ansible.builtin.copy:
    src: zshrc
    dest: /home/{{ lookup('env', 'USER') }}/.zshrc
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: '0644'

- name: Debug
  ansible.builtin.debug:
    msg:
      - "{{ lookup('env', 'USER') }}"
      - "{{ golang_version }}"
      - "{{ goversion_preferred }}"
      - "{{ lookup('env', 'USER') }}"
      - "{{ ansible_user_id }}"

- name: Install yq from snap community
  community.general.snap:
    name:
      - yq
